/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "0";
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    inlet
    { 
		type          fixedValue;
        value         uniform (0.1 0 0); // set by automation framework
    }

    outlet
    {
        type            inletOutlet;
        inletValue      uniform (0 0 0);
        value           $internalField;
    }

	top
    {
        type            partialSlip;
        valueFraction   uniform 0.454545454545;  //0 - slip, 1, noslip : valueFraction = [\nabla]/[\nabla + 2 \lambda] with \lambda being the slip length and \nabla the cell size normal to wall
        value           uniform (0 0 0);
    }

    bottom
    {
        type            partialSlip;
        valueFraction   uniform 0.454545454545;  //0 - slip, 1, noslip : valueFraction = [\nabla]/[\nabla + 2 \lambda] with \lambda being the slip length and \nabla the cell size normal to wall 
        value           uniform (0 0 0); 

    }

    "array_cavity_bottom_.*"
    {
        type            partialSlip;
        valueFraction   uniform 0.454545454545;  //0 - slip, 1, noslip : valueFraction = [\nabla]/[\nabla + 2 \lambda] with \lambda being the slip length and \nabla the cell size normal to wall 
        value           uniform (0 0 0); 

    }

    "array_cavity_wall_.*"
    {
        type            partialSlip;
        valueFraction   uniform 0.454545454545;  //0 - slip, 1, noslip : valueFraction = [\nabla]/[\nabla + 2 \lambda] with \lambda being the slip length and \nabla the cell size normal to wall 
        value           uniform (0 0 0); 

    }


    

    front
    {
        type            partialSlip;
        valueFraction   uniform 0.454545454545;  //0 - slip, 1, noslip : valueFraction = [\nabla]/[\nabla + 2 \lambda] with \lambda being the slip length and \nabla the cell size normal to wall 
        value           uniform (0 0 0); 

    }

    back
    {
        type            partialSlip;
        valueFraction   uniform 0.454545454545;  //0 - slip, 1, noslip : valueFraction = [\nabla]/[\nabla + 2 \lambda] with \lambda being the slip length and \nabla the cell size normal to wall 
        value           uniform (0 0 0); 

    }

   symmetryPlane
    {
        type            slip;
    }


}


// ************************************************************************* //
